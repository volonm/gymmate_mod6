<div className="mb-3">
              <label htmlFor="inputEmail" className="form-label">Email:</label>
              <input
                type="text"
                className="form-control"
                id="inputEmail"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="inputUsername" className="form-label">Username:</label>
              <input
                type="text"
                className="form-control"
                id="inputUsername"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="inputPassword" className="form-label">Password:</label>
              <input
                type="password"
                className="form-control"
                id="inputPassword"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="inputDateOfBirth" className="form-label">Date of Birth:</label>
              <input
                type="text"
                className="form-control"
                id="inputDateOfBirth"
                value={dateOfBirth}
                onChange={(e) => setDateOfBirth(e.target.value)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="inputWeight" className="form-label">Weight:</label>
              <input
                type="number"
                className="form-control"
                id="inputWeight"
                value={weight}
                onChange={(e) => setWeight(parseInt(e.target.value))}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="inputHeight" className="form-label">Height:</label>
              <input
                type="number"
                className="form-control"
                id="inputHeight"
                value={height}
                onChange={(e) => setHeight(parseInt(e.target.value))}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="inputGoal" className="form-label">Goal:</label>
              <input
                type="text"
                className="form-control"
                id="inputGoal"
                value={goal}
                onChange={(e) => setGoal(e.target.value)}
              />
            </div>  


REGISTRATION TSX 1
import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

const RegistrationPage: React.FC = () => {
  const [formData, setFormData] = useState({
    email: '',
    username: '',
    password: '',
    dateOfBirth: '',
    weight: 0,
    height: 0,
    goal: '',
    image: null,
  });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setFormData({ ...formData, image: e.target.files[0] });
    }
  };

  const handleRegistration = async () => {
    try {
      const response = await fetch('http://127.0.0.1:8000/auth/reg', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });

      if (response.status === 200) {
        const data = await response.json();
        // Handle successful registration, e.g., store token in local storage
        console.log('Registration successful. Token:', data.token);
      } else if (response.status === 400) {
        // Handle user already exists
        console.log('User already exists.');
      } else {
        // Handle other errors
        console.log('Something went wrong.');
      }
    } catch (error) {
      console.error('Error during registration:', error);
    }
  };

  return (
    <div className="container mt-5">
      <h2>Registration Page</h2>
      <form>
        <div className="mb-3">
          <label htmlFor="email" className="form-label">
            Email
          </label>
          <input type="email" className="form-control" id="email" name="email" onChange={handleInputChange} />
        </div>

        

        <div className="mb-3">
          <label htmlFor="image" className="form-label">
            Profile Image
          </label>
          <input type="file" className="form-control" id="image" name="image" onChange={handleFileChange} />
        </div>

        <button type="button" className="btn btn-primary" onClick={handleRegistration}>
          Register
        </button>
      </form>
    </div>
  );
};

export default RegistrationPage;
