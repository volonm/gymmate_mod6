from rest_framework import serializersfrom . import modelsfrom .models import Exercise, Training, AvailabilityTimeslot, Chat# from ..authorization.models import MyUserclass TimeslotSerializer(serializers.ModelSerializer):    class Meta:        model = models.AvailabilityTimeslot        fields = ['id', 'userId', 'date', 'startTime', 'endTime']class TimeslotDeleteSerializer(serializers.Serializer):    id = serializers.IntegerField(help_text="ID of the timeslot to be deleted")    def validate_id(self, value):        if not AvailabilityTimeslot.objects.filter(id=value).exists():            raise serializers.ValidationError("Timeslot with this ID does not exist.")        return valueclass ExerciseSerializer(serializers.ModelSerializer):    class Meta:        model = Exercise        fields = ['id', 'name', 'repetitions', 'sets']class TrainingSerializer(serializers.ModelSerializer):    exercises = ExerciseSerializer(many=True, read_only=True)    class Meta:        model = Training        fields = ['training_id', 'userId', 'start_time', 'end_time', 'day_goal', 'exercises']class TrainingUpdateSerializer(serializers.Serializer):    trainingId = serializers.IntegerField(required=True)    newStartTime = serializers.DateTimeField(format='%Y-%m-%d %H:%M:%S', required=True)    newEndTime = serializers.DateTimeField(format='%Y-%m-%d %H:%M:%S', required=True)    def update(self, instance, validated_data):        instance.start_time = validated_data.get('newStartTime', instance.start_time)        instance.end_time = validated_data.get('newEndTime', instance.end_time)        instance.save()        return instanceclass TrainingDeleteSerializer(serializers.Serializer):    trainingId = serializers.IntegerField(help_text="ID of the training to be deleted")    def validate_trainingId(self, value):        if not Training.objects.filter(training_id=value).exists():            raise serializers.ValidationError("Training with this ID does not exist.")        return valueclass ChatSerializer(serializers.ModelSerializer):    class Meta:        model = Chat        fields = ['userId', 'sender', 'message', 'timestamp']